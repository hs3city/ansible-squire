version: '3'

services:
  reverse-proxy:
    image: traefik:v2.2
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      - "--certificatesresolvers.le.acme.tlschallenge=true" # le â€“ lets encrypt
      - "--certificatesresolvers.le.acme.email=kontakt@hs3.pl"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      #- "--certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - "/var/eph/letsencrypt:/letsencrypt"
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  whohacks:
    image: hs3city/whois:1.2.4
    restart: always
    environment:
      SECRET_KEY: ${WHOHACKS_SECRET}
      DB_PATH: /data/whoisdevices.db
    volumes:
      - "/var/eph/whohacks:/data"
      - "/etc/localtime:/etc/localtime:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whohacks.rule=Host(`whois.at.hs3.pl`)"
      - "traefik.http.routers.whohacks.entrypoints=websecure"
      - "traefik.http.routers.whohacks.tls=true"
      - "traefik.http.routers.whohacks.tls.certresolver=le"

  etherpad:
    image: "fuerst/etherpad-docker:latest"
    restart: always
    volumes:
      - "/var/eph/etherpad-lite:/opt/etherpad-lite/var"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.etherpad.rule=Host(`pad.at.hs3.pl`)"
      - "traefik.http.routers.etherpad.entrypoints=websecure"
      - "traefik.http.routers.etherpad.tls=true"
      - "traefik.http.routers.etherpad.tls.certresolver=le"

  spotty-kiwi:
    image: "hs3city/spotty-kiwi:0.1.0"
    restart: always
    volumes:
      - "/var/eph/spotty-kiwi/.env:/app/.env"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.spotty-kiwi.rule=Host(`spotty-kiwi.at.hs3.pl`)"
      - "traefik.http.routers.spotty-kiwi.entrypoints=websecure"
      - "traefik.http.routers.spotty-kiwi.tls=true"
      - "traefik.http.routers.spotty-kiwi.tls.certresolver=le"

  lounge:
    image: "thelounge/thelounge:3.0.1"
    restart: always
    volumes:
      - "/var/eph/lounge:/var/opt/thelounge"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lounge.rule=Host(`bouncer.at.hs3.pl`)" # todo bouncer -> lounge
      - "traefik.http.routers.lounge.entrypoints=websecure"
      - "traefik.http.routers.lounge.tls=true"
      - "traefik.http.routers.lounge.tls.certresolver=le"

  exoframe-server:
    image: exoframe/server
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/path/to/exoframe-folder:/root/.exoframe"
      - "/home/not7cd/.ssh/authorized_keys:/root/.ssh/authorized_keys:ro"
    environment:
      EXO_PRIVATE_KEY: ${EXO_PRIVATE_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.exoframe-server.rule=Host(`exoframe.hs3.pl`)"

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - /var/eph/postgres:/var/lib/postgresql/data
